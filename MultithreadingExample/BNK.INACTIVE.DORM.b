SUBROUTINE BNR.INACTIVE.DORM (AC.LIST.ID)

$INSERT ../T24_BP I_COMMON
$INSERT ../T24_BP I_EQUATE
$INSERT ../T24_BP I_F.ACCOUNT
$INSERT ../T24_BP I_F.CUSTOMER
$INSERT ../T24_BP I_F.FUNDS.TRANSFER
$INSERT ../T24_BP I_F.OFS.SOURCE
$INSERT I_F.BNR.H.DORM.REGISTER
$INSERT I_F.BNR.INACTIVE.DORM.COMMON
$INSERT ../T24_BP I_F.ACCOUNT.DEBIT.INT
$INSERT ../T24_BP I_F.ACCOUNT.CREDIT.INT
$INSERT ../T24_BP I_F.STMT.ENTRY
$INSERT ../T24_BP I_GTS.COMMON
$INSERT ../T24_BP I_F.DATES
GOSUB INIT
GOSUB PROCESS

INIT:
    RETURN

PROCESS:

*AC.LIST.ID = '2001161070000022'

****CHECK AGAINST EXCLUDE LIST
    EXCL.COUNT = DCOUNT(S.PARAM.EXCLUDE,VM)
    FOR CC = 1 TO EXCL.COUNT
        EXCL.ID = FIELD(S.PARAM.EXCLUDE,VM,CC)
        IF AC.LIST.ID = EXCL.ID THEN
            RETURN
        END
    NEXT CC
** IF AC.LIST.ID EQ '2001161170000037' THEN
*  DEBUG
*  END
****GET ACCOUNT AND CUSTOMER DETAILS
    R.ACCOUNT = '' ; AC.ERR = ''
    CALL F.READ(FN.ACCOUNT, AC.LIST.ID,R.ACCOUNT,F.ACCOUNT,AC.ERR)
    IF R.ACCOUNT THEN
        Y.AC.TITLE = R.ACCOUNT<AC.ACCOUNT.TITLE.1>
        Y.AC.PRODUCT = R.ACCOUNT<AC.CATEGORY>
        Y.AC.CURRENCY = R.ACCOUNT<AC.CURRENCY>
        Y.INACTIVE.MARKER = R.ACCOUNT<AC.INACTIVE.MARKER>
        Y.DT.LAST.CR = R.ACCOUNT<AC.DATE.LAST.CR.CUST>
        Y.DT.LAST.DR = R.ACCOUNT<AC.DATE.LAST.DR.CUST>
        Y.DT.OPENING = R.ACCOUNT<AC.OPENING.DATE>
        Y.WORKING.BAL = R.ACCOUNT<AC.WORKING.BALANCE>
        Y.DAD = R.ACCOUNT<AC.ACCOUNT.OFFICER>

        IF Y.WORKING.BAL = '' THEN
            Y.WORKING.BAL = 0
        END
        Y.BRANCH = R.ACCOUNT<AC.CO.CODE>
        Y.POST.RESTRICT = R.ACCOUNT<AC.POSTING.RESTRICT>
    END

    R.CUSTOMER = '' ; CU.ERR = ''
    CALL F.READ(FN.CUSTOMER,Y.CUST.NO,R.CUSTOMER,F.CUSTOMER,CU.ERR)
    IF R.CUSTOMER THEN
        Y.CUST.NAME = R.CUSTOMER<EB.CUS.NAME.1>
    END

    Y.LWORK.DAY = R.DATES(EB.DAY.LAST.WORKING.DAY)
    Y.CV.LWORK.DAY = ICONV(Y.LWORK.DAY, 'D')
    Y.LWORK.MT = OCONV(Y.CV.LWORK.DAY, 'DMA')

    R.REGISTER = ''; REG.ERR = '' ; Y.DT.REACTIVATED = ''
    CALL F.READ(FN.REGISTER,AC.LIST.ID,R.REGISTER,F.REGISTER,REG.ERR)
    IF R.REGISTER THEN
        Y.DT.REACTIVATED = R.REGISTER<BNR.DT.REACTIVATED>
        Y.NOTIFICATION = R.REGISTER<BNR.NOTIFICATION>
        Y.DT.LAST.REV = R.REGISTER<BNR.DT.LAST.REV>
        Y.CV.LAST.REV = ICONV(Y.DT.LAST.REV, 'D')
        Y.MT.LAST.REV = OCONV(Y.CV.LAST.REV, 'DMA')
    END

    CAL.DAYS = 'C'
    Y.DT.LAST.TXN = ''

    IF Y.DT.LAST.CR = '' AND Y.DT.LAST.DR = '' THEN
        CALL CDD('',Y.DT.OPENING,TODAY,CAL.DAYS)
        C.DAYS.DIFF = CAL.DAYS
        Y.DT.LAST.TXN = Y.DT.OPENING
    END ELSE
        IF Y.DT.LAST.CR NE '' AND Y.DT.LAST.DR NE '' THEN
            IF Y.DT.LAST.CR > Y.DT.LAST.DR THEN
                CALL CDD('',Y.DT.LAST.CR,TODAY,CAL.DAYS)
                C.DAYS.DIFF = CAL.DAYS
                Y.DT.LAST.TXN = Y.DT.LAST.CR
            END ELSE
                CALL CDD('',Y.DT.LAST.DR,TODAY,CAL.DAYS)
                C.DAYS.DIFF = CAL.DAYS
                Y.DT.LAST.TXN = Y.DT.LAST.DR
            END
        END ELSE
            IF Y.DT.LAST.CR = '' AND Y.DT.LAST.DR NE '' THEN
                CALL CDD('',Y.DT.LAST.DR,TODAY,CAL.DAYS)
                C.DAYS.DIFF = CAL.DAYS
                Y.DT.LAST.TXN = Y.DT.LAST.DR
            END ELSE
                CALL CDD('',Y.DT.LAST.CR,TODAY,CAL.DAYS)
                C.DAYS.DIFF = CAL.DAYS
                Y.DT.LAST.TXN = Y.DT.LAST.CR
            END
        END
    END

    Y.DT.MADE.INACTIVE = ''
    Y.DT.MADE.DORMANT = ''
    Y.DT.CLOSED = ''

    IF C.DAYS.DIFF LT 100 THEN
        Y.BNR.AC.STATUS = '0' ;*ACTIVE
    END

    IF C.DAYS.DIFF GE 100 AND C.DAYS.DIFF LT 360 THEN
        IF Y.WORKING.BAL > 0 THEN
        Y.BNR.AC.STATUS = '3' ;*DORMANT
        Y.DT.MADE.DORMANT = Y.DT.LAST.TXN
        CALL CDT('',Y.DT.MADE.DORMANT,180)
    END ELSE
        Y.BNR.AC.STATUS = '0' ;*ACTIVE
    END
END

IF C.DAYS.DIFF GE 360 THEN
    Y.BNR.AC.STATUS = '2' ;*CLOSED
    Y.DT.CLOSED = Y.DT.LAST.TXN
    CALL CDT('',Y.DT.CLOSED,360)
END

Y.NOTIFICATION = ''
IF C.DAYS.DIFF EQ 150 OR C.DAYS.DIFF EQ 330 THEN
    Y.NOTIFICATION = '1' ;*SEND NOTIFICATION
END ELSE
    Y.NOTIFICATION = '0' ;*NO NOTIFICATION
END

IF C.DAYS.DIFF EQ 165 OR C.DAYS.DIFF EQ 345 THEN
    Y.NOTIFICATTION = '2' ;*SEND REMINDER
END ELSE
    Y.NOTIFICATION = '0'  ;*NO NOTIFICATION
END

RESTRICT PROCESS:
    
    IF Y.BNR.AC.STATUS = 0 AND Y.DT.REACTIVATED EQ '' THEN  ;*ACTIVE - UPDATE REGISTER ONLY
        GOSUB UPDATE.REGISTER
    END

    IF Y.BNR.AC.STATUS = 2 THEN  ; *CLOSED - POSTING RESTRICT + MOVE FUNDS
        Y.NEW.RESTRICT = '85'
        GOSUB POSTING.RESTRICT
        GOSUB UPDATE.REGISTER

        IF C.DAYS.DIFF GE 1800 THEN
            GOSUB MOVE.FUNDS  ;*ONLY IF CLOSED AND OLDER THAN 5 YEARS
        END
    END
    
    IF Y.BNR.AC.STATUS = 3 THEN   ;*DORMANT - POSTING RESTRICT + ADI/ACI RECORD + BLOCKING OVERRIDE
        Y.NEW.RESTRICT = '30'
        GOSUB POSTING.REGISTER
        GOSUB UPDATE.ADI.ACI
        GOSUB UPDATE.REGISTER
    END
*IF AC.LIST.ID EQ '2001000000002263' THEN
    * DEBUG
*END
    IF MT.LAST.REV EQ '' OR Y.MT.LAST.REV NE Y.LWORK.MT THEN
        IF Y.WORKING.BAL < 0 THEN
            GOSUB REVERSE.SERVICE.FEE  ;*APPLY TO ALL ACCOUNTS
            CALL F.READ(FN.REGISTER,AC.LIST.ID,R.REGISTER,F.REGISTER,REG.ERR)
            Y.DT.LAST.REV = TODAY
            R.REC.ID = AC.LIST.ID
            R.REC<15> = Y.DT.LAST.REV
            WRITE R.REC TO F.REGISTER,R.REC.ID
        END ELSE
            IF Y.BNR.AC.STATUS = 2 THEN
                GOSUB REVERSE.SERVICE.FEE   ;*APPLY TO ALL ACCOUNTS
                CALL F.READ(FN.REGISTER,AC.LIST.ID,R.REGISTER,F.REGISTER,REG.ERR)
                Y.DT.LAST.REV = TODAY
                R.REC.ID = AC.LIST.ID
                R.REC<15> = Y.DT.LAST.REV
                WRITE R.REC TO F.REGISTER,R.REC.ID
            END
        END

        ADI.EXISTS = 'N'
        ADI.COUNT = DCOUNT(S.ADI.LIST,FM)
        FOR KK = 1 TO ACI.COUNT
            ADI.REC = FIELD(S.ADI.LIST,FM,KK)
            ADI.ZERO = FIELD(ADI.REC, '-',1)
            IF AC.LIST.ID = ADI.ZERO THEN
                ADI.EXISTS = 'Y'
                BREAK
            END
        NEXT KK
        IF ADI.EXISTS = 'N' THEN
            ADI.ERR = ''
            ADI.ID = AC.LIST.ID:"-":TODAY
            CALL F.READ(FN.ADI,ADI.ID, R.ADI, F.ADI, ADI.ERR)
            R.ADI<IC.ADI.INTEREST.DAY.BASIS> = 'NONE'
            WRITE R.ADI TO F.ADI,ADI.ID
    *CALL JOURNAL.UPDATE(ADI.ID)
        END

        ACI.EXISTS = 'N'
        ACI.COUNT = DCOUNT(S.ACI.LIST,FM)
        FOR KK = 1 TO ACI.COUNT
            ACI.REC = FIELD(S.ACI.LIST,FM,KK)
            ACI.ZERO = FIELD(ACI.REC, '-',1)
            IF AC.LIST.ID = ACI.ZERO THEN
                ACI.EXISTS = 'Y'
                BREAK
            END
        NEXT KK
        IF ACI.EXISTS = 'N' THEN
            ACI.ERR = ''
            ACI.ID = AC.LIST.ID:"-":TODAY
            CALL F.READ(FN.ACI,ACI.ID, R.ACI, F.ACI, ACI.ERR)
            R.ACI<IC.ACI.INTEREST.DAY.BASIS> = 'NONE'
            WRITE R.ACI TO F.ACI,ACI.ID
    *CALL JOURNAL.UPDATE(ACI.ID)
        END

        RETURN
    
    MOVE.FUNDS:

        IF Y.WORKING.BAL > 0 THEN
            CONTRA.AC = Y.AC.CURRENCY:S.PARAM.SUSP[4,13]
            K.DR.AC = AC.LIST.ID
            K.CR.AC = CONTRA.AC
            K.DR.AMT = Y.WORKING.BAL
            K.DR.DATE = TODAY
            K.CR.DATE = TODAY
            K.DR.REF = "BNR CLOSE"
            K.CR.REF = "BNR CLOSE"
            K.DR.CUR = Y.AC.CURRENCY
            K.ORD.BANK = '999999'
            K.DAO = Y.DAO
            K.CO.CODE = Y.BRANCH

            CALL GET.LOC.OFS.USER(K.USER,K.PASS)

            OFS.HEADER = 'FUNDS.TRANSFER,DORMANT/I/PROCESS/1/0,':K.USER:'/':K.PASS:'/':K.CO.CODE:'///1,,'

            OFS.DATA = 'DEBIT.ACCT.NO::=':K.DR.AC:',DEBIT.CURRENCY::=':K.DR.CUR:',DEBIT.AMOUNT::=':K.DR.AMT:',DEBIT.VALUE.DATE::=':K.DR.DATE:',CREDIT.VALUE.DATE::=':K.CR.DATE:',DEBIT.THEIR.REF::=':K.DR.REF:'CREDIT.THEIR.REF::=':K.CR.REF

            OFS.MSG = OFS.HEADER:OFS.DATA

            OFS.SOURCE.ID = 'TCS'

            R.OFS.SOURCE = '';ERR.SOURCE = ''
            CALL CACHE.READ(FN.OFS.SOURCE,OFS.SOURCE.ID,R.OFS.SOURCE,ERR.SOURCE)

            OFS$SOURCE.REC = R.OFS.SOURCE
            OFS$SOURCE.ID = OFS.SOURCE.ID

            PRINT AC.LIST.ID:' ':Z.CUR:' ':Z.AMT.POST

            CALL OFS.POST.MESSAGE(OFS.MSG,MSG.ID,OFS.SOURCE.ID,'')

            *CALL OFS.PROCESS.MANAGER(OFS.MSG,Y.OFS.RESPONSE)

*        Y.OFS.FT.POST.ID=FIELD(Y.OFS.RESPONSE,"/",1)
*        Y.OFS.ERR = ""

*        Y.OFS.FT.ID=FIELD(Y.OFS.RESPONSE,"/",1)
*        Y.OFS.ERR=FIELD(Y.OFS.RESPONSE,"/",3)

*        Y.FINAL.ERR.MSG=FIELD(Y.OFS.ERR,",",1)

*        Y.ERR.MSG=FIELD(Y.OFS.RESPONSE,"=",2)

        END

    NEXT KK

    RETURN

